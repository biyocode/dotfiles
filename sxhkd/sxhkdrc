# Show keybindings
super + F1
	konsole -e keybindings.sh
	
# Show deadd-notification-center
super + v
  showDeadd   

# Window manipulation
# Toggle tiling mode of window
super + shift + t
	bspc node -t {pseudo_tiled,tiled}
super + t
	{bspc node -t floating && window-placer $(bspc query -T -d | grep -o '"state":"floating"' | wc -l),bspc node -t tiled}
# Force all windows of the desktop to tile
super + ctrl + t
	bspcp tile
# Force all windows of the desktop to float and arrange them
super + ctrl + shift + t
	bspcp float
	
# Try to keep size and position of the selected window
super + o
	bspc node -g private

# Window moving and splitting
# Presel window for splitting in certain direction
alt + ctrl + {a,s,w,d}
	bspc node -p \~{west,south,north,east} -i

#alt + ctrl + {h,j,k,l}
#	bspc node -p \~{west,south,north,east}

alt + ctrl + {Left,Down,Up,Right}
	bspc node -p \~{west,south,north,east}

# Presel the desktop for splitting in certain direction
# alt + shift + {a,s,w,d}
	# bspc node @/ -p \~{west,south,north,east}
# 
# alt + shift + {h,j,k,l}
	# bspc node @/ -p \~{west,south,north,east}
# alt + shift + {Left,Down,Up,Right}
	# bspc node @/ -p \~{west,south,north,east}
# Set splitting ratio of windows
alt + ctrl + {1-9}
	bspc node -o 0.{1-9}
		
## Alternative: i3 style behavior (focus nth, desktop of the focused monitor)
#super + {1-9,0}
#	focusdesktopofthismonitor {1-9}
#super + shift + {1-9,0}
#	movetodesktopofthismonitor {1-9,10}
# Select previous / next desktop
super + {m,n}
	bspc desktop -f {prev.occupied,next.occupied} 

#Focus windows by direction, works with multihead
#super +  {h,j,k,l}
#    focusmover {west,south,north,east}
super +  {Left,Down,Up,Right}
    focusmover {west,south,north,east}

# Move tiled windows. Moving a tiled window to 
# preselected one moves into preselection instead. 
# Moving out of the screen should move the window to next monitor if possible
super + shift + {a,s,w,d}
	windowgrabber {west,south,north,east}

#super + shift + {h,j,k,l}
#	windowgrabber {west,south,north,east}
	
# Different style of movement: transplant into window in chosen direction
super + shift + {Left,Down,Up,Right}
	euclid_mover {west,south,north,east}

#resize windows
super + ctrl + {a,s,w,d}
	bspwm_resize.sh {west,south,north,east}

#super + ctrl + {h,j,k,l}
#	bspwm_resize.sh {west,south,north,east}
	
super + ctrl + {Left,Down,Up,Right}
	bspwm_resize.sh {west,south,north,east}

# Layout manipulation/desktop level controls
# Balance tree
super + b
	bspc node @/ -B

# Balance brother node. If you do this on biggest window of the desktop, it usually means balancing all windows with except the biggest.
super + alt + b
	bspc node @brother -B
	
# Undo balancing (equalize windows)
super + ctrl + b
	bspc node @/ -E

# Toggle automatic balancing of windows
alt + b
	euclid_balancer

# Mirror and flip leaves of tree
super + {comma,period}
	bspc node @/ -F {horizontal,vertical}
	
# Rotate leaves of tree
super + shift + {comma,period}
	bspc node @/ -R {90,270}

# Change window gap
super + g
	bspc config -d focused window_gap {$gap,$(($gap+$gap)),$(($gap+$gap+$gap))}

super + button{4,5}
	bspc config -d focused window_gap $((`bspc config -d focused window_gap` {+,-} 2 ))

### Add or remove desktops by scrolling
super + ctrl + button5
    bspcp dsktp rm

super + ctrl + button4
    bspcp dsktp add

# Spawn window manipulation menuq
# Mod1 is alt
#    BspwmWindowMenu
mod1 + @button1
    mygtkmenui -- .config/GTKmenu/BspwmWindowMenui

# Touchpad "gestures" (depend on your touchpad driver, very likely to be unavailable)
# spawn programs
# Triggered by just tapping RIGHT super key
super + shift + space + z
	hidePanel

super + shift + Return
	default-terminal
super + z
	default-terminal

super + shift + z
	open-terminal-here
	
##### Construction
############################################

###############################
### BSPWM Keybinding Config ###
###############################
# Cleanly quit bspwm
#super + shift + {q,r}
#	bspc {quit 1 && pkill lemonpanel && pkill lemonbar,wm -r}
# make sxhkd reload its configuration files:
super + shift + Escape
	pkill -USR1 -x sxhkd
#edit this file
alt + ctrl + space
	nvim ~/.config/sxhkd/sxhkdrc
# Toggle picom
super + ctrl + space
	{pkill picom ,\
	picom -b }
# In case bspwmrc fails to execute/you wish have plugged in a new monitor
super + ctrl + r
	bspwmrc

########################
### Utility Keybinds ###
########################
super + d
    rofi -show drun -show-icons -display-drun ">" -theme ~/.config/rofi/config.rasi

super + e
	thunar

super + Return
    konsole --profile Main

Print
  flameshot gui
super + Print
  flameshot full -c

###########################
### Window Manipulation ###
###########################
# go (Shift=move) to desktop (and focus the monitor that the desktop is located on. Bspwm style)
super + {_,shift + }{1-9,0}
    bspc {desktop -f,node -d} ^{1-9,10}
# Kill window
super + shift + q
  bspc node -c
# Toggle fullscreen
super + shift + f 
	bspc node -t {fullscreen,tiled}	
# cycle windows
alt + {_,shift + }Tab
    bspc node -f {next,prev}
# Go to specific window
super + Tab
	WindowSelector

#############
### Mouse ###
#############
~button1
	DidIClickDesktop.sh && gapgrab	

~button2
	DidIClickDesktop.sh && mygtkmenui -- .config/GTKmenu/BspwmDesktopMenui
#DidIClickDesktop.sh && mygtkmenui -- .config/GTKmenu/BspwmWindowMenui
		
~button3
	DidIClickDesktop.sh && mygtkmenui -- .config/GTKmenu/LaunchMenu

# mod5 is alt_gr (first key right from space) on most keyboards. 
mod5 + @button1
    MouseLaunch ; mygtkmenui -- .config/GTKmenu/LaunchMenu

############
### Misc ###
############
XF86AudioRaiseVolume
	volume up

XF86AudioLowerVolume
	volume down

XF86AudioMute
	volume mute
	
XF86MonBrightnessDown
 light -U 5 

XF86MonBrightnessUp
 light -A 5

XF86Sleep
	systemctl suspend
